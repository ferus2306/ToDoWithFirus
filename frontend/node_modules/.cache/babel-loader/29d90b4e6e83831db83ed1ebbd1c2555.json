{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/firushanov/Desktop/Kadince/todowithfirus/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction TodoForm({\n  addTodo\n}) {\n  _s();\n\n  const [input, setInput] = useState({\n    id: \"\",\n    task: \"\",\n    completed: false,\n    pending: false\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (todo.text.trim()) {\n      addTodo({ ...todo,\n        id: uuidv4()\n      });\n      setTodo({ ...todo,\n        task: \"\"\n      });\n    }\n  }\n\n  function handleTaskInputChange(e) {\n    setTodo({ ...todo,\n      task: e.target.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        name: \"text\",\n        type: \"text\",\n        placeholder: \"Enter To Do Item\",\n        value: todo.text,\n        onChange: handleTaskInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      size: \"sm\",\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"ZmLspCBVzEBuTS6X1RzoMb2pvLA=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/firushanov/Desktop/Kadince/todowithfirus/src/components/TodoForm.js"],"names":["React","useState","Form","Button","v4","uuidv4","TodoForm","addTodo","input","setInput","id","task","completed","pending","handleSubmit","e","preventDefault","todo","text","trim","setTodo","handleTaskInputChange","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA8B,iBAA9B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAGA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AAC/BS,IAAAA,EAAE,EAAE,EAD2B;AAE/BC,IAAAA,IAAI,EAAE,EAFyB;AAG/BC,IAAAA,SAAS,EAAE,KAHoB;AAI/BC,IAAAA,OAAO,EAAE;AAJsB,GAAD,CAAlC;;AAQA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIC,IAAI,CAACC,IAAL,CAAUC,IAAV,EAAJ,EAAsB;AAClBZ,MAAAA,OAAO,CAAC,EAAE,GAAGU,IAAL;AAAWP,QAAAA,EAAE,EAAEL,MAAM;AAArB,OAAD,CAAP;AACAe,MAAAA,OAAO,CAAC,EAAE,GAAGH,IAAL;AAAWN,QAAAA,IAAI,EAAE;AAAjB,OAAD,CAAP;AACH;AACJ;;AAED,WAASU,qBAAT,CAA+BN,CAA/B,EAAkC;AAC9BK,IAAAA,OAAO,CAAC,EAAE,GAAGH,IAAL;AAAWN,MAAAA,IAAI,EAAEI,CAAC,CAACO,MAAF,CAASC;AAA1B,KAAD,CAAP;AACH;;AAGD,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA,4BACA,QAAC,IAAD,CAAM,KAAN;AAAA,6BACI,QAAC,IAAD,CAAM,OAAN;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,WAAW,EAAC,kBAHZ;AAIA,QAAA,KAAK,EAAEG,IAAI,CAACC,IAJZ;AAKA,QAAA,QAAQ,EAAEG;AALV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAWI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,IAA/B;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAxCQf,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, } from 'react-bootstrap'\nimport { v4 as uuidv4 } from 'uuid';\n\n\nfunction TodoForm({ addTodo }) {\n\n    const [input, setInput] = useState({\n        id: \"\",\n        task: \"\",\n        completed: false,\n        pending: false\n    });\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (todo.text.trim()) {\n            addTodo({ ...todo, id: uuidv4() });\n            setTodo({ ...todo, task: \"\"})\n        }\n    }\n\n    function handleTaskInputChange(e) {\n        setTodo({ ...todo, task: e.target.value})\n    }\n\n\n    return (\n        <Form onSubmit={handleSubmit}>\n        <Form.Group>\n            <Form.Control\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"Enter To Do Item\" \n            value={todo.text}\n            onChange={handleTaskInputChange}\n            />\n        </Form.Group>\n\n            <Button variant=\"primary\" size=\"sm\" type=\"submit\">\n                Add\n            </Button>\n        </Form>\n  );\n}\n\n\nexport default TodoForm\n\n"]},"metadata":{},"sourceType":"module"}