{"ast":null,"code":"import { a as _objectSpread2, _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useRef, useState, useCallback, useEffect } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport { isButton } from 'reakit-utils/isButton';\nimport { warning } from 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport { useIsomorphicEffect } from 'reakit-utils/useIsomorphicEffect';\nimport { hasFocusWithin } from 'reakit-utils/hasFocusWithin';\nimport { isPortalEvent } from 'reakit-utils/isPortalEvent';\nimport { getActiveElement } from 'reakit-utils/getActiveElement';\nimport { canUseDOM } from 'reakit-utils/canUseDOM';\nimport { getClosestFocusable } from 'reakit-utils/tabbable';\nimport { useRole } from '../Role/Role.js'; // Automatically generated\n\nvar TABBABLE_KEYS = [\"disabled\", \"focusable\"];\n\nfunction isUA(string) {\n  if (!canUseDOM) return false;\n  return window.navigator.userAgent.indexOf(string) !== -1;\n}\n\nvar isSafariOrFirefoxOnMac = isUA(\"Mac\") && !isUA(\"Chrome\") && (isUA(\"Safari\") || isUA(\"Firefox\"));\n\nfunction focusIfNeeded(element) {\n  if (!hasFocusWithin(element)) {\n    element.focus();\n  }\n} // Safari and Firefox on MacOS don't focus on buttons on mouse down like other\n// browsers/platforms. Instead, they focus on the closest focusable ancestor\n// element, which is ultimately the body element. So we make sure to give focus\n// to the tabbable element on mouse down so it works consistently across\n// browsers.\n// istanbul ignore next\n\n\nfunction useFocusOnMouseDown() {\n  if (!isSafariOrFirefoxOnMac) return undefined;\n\n  var _React$useState = useState(null),\n      tabbable = _React$useState[0],\n      scheduleFocus = _React$useState[1];\n\n  useEffect(function () {\n    if (!tabbable) return;\n    focusIfNeeded(tabbable);\n    scheduleFocus(null);\n  }, [tabbable]);\n  var onMouseDown = useCallback(function (event) {\n    var element = event.currentTarget;\n    if (isPortalEvent(event)) return;\n    if (!isButton(element)) return;\n    var activeElement = getActiveElement(element);\n    if (!activeElement) return;\n    var activeElementIsBody = activeElement.tagName === \"BODY\";\n    var focusableAncestor = getClosestFocusable(element.parentElement);\n\n    if (activeElement === focusableAncestor || activeElementIsBody && !focusableAncestor) {\n      // When the active element is the focusable ancestor, it'll not emit\n      // focus/blur events. After all, it's already focused. So we can't\n      // listen to those events to focus this tabbable element.\n      // When the active element is body and there's no focusable ancestor,\n      // we also don't have any other event to listen to since body never\n      // emits focus/blur events on itself.\n      // In both of these cases, we have to schedule focus on this tabbable\n      // element.\n      scheduleFocus(element);\n    } else if (focusableAncestor) {\n      // Clicking (mouse down) on the tabbable element on Safari and Firefox\n      // on MacOS will fire focus on the focusable ancestor element if\n      // there's any and if it's not the current active element. So we wait\n      // for this event to happen before moving focus to this element.\n      // Instead of moving focus right away, we have to schedule it,\n      // otherwise it's gonna prevent drag events from happening.\n      var onFocus = function onFocus() {\n        return scheduleFocus(element);\n      };\n\n      focusableAncestor.addEventListener(\"focusin\", onFocus, {\n        once: true\n      });\n    } else {\n      // Finally, if there's no focsuable ancestor and there's another\n      // element with focus, we wait for that element to get blurred before\n      // focusing this one.\n      var onBlur = function onBlur() {\n        return focusIfNeeded(element);\n      };\n\n      activeElement.addEventListener(\"blur\", onBlur, {\n        once: true\n      });\n    }\n  }, []);\n  return onMouseDown;\n}\n\nfunction isNativeTabbable(element) {\n  return element.tagName === \"BUTTON\" || element.tagName === \"INPUT\" || element.tagName === \"SELECT\" || element.tagName === \"TEXTAREA\" || element.tagName === \"A\";\n}\n\nfunction supportsDisabledAttribute(element) {\n  return element.tagName === \"BUTTON\" || element.tagName === \"INPUT\" || element.tagName === \"SELECT\" || element.tagName === \"TEXTAREA\";\n}\n\nfunction getTabIndex(trulyDisabled, nativeTabbable, supportsDisabled, htmlTabIndex) {\n  if (trulyDisabled) {\n    if (nativeTabbable && !supportsDisabled) {\n      // Anchor, audio and video tags don't support the `disabled` attribute.\n      // We must pass tabIndex={-1} so they don't receive focus on tab.\n      return -1;\n    } // Elements that support the `disabled` attribute don't need tabIndex.\n\n\n    return undefined;\n  }\n\n  if (nativeTabbable) {\n    // If the element is enabled and it's natively tabbable, we don't need to\n    // specify a tabIndex attribute unless it's explicitly set by the user.\n    return htmlTabIndex;\n  } // If the element is enabled and is not natively tabbable, we have to\n  // fallback tabIndex={0}.\n\n\n  return htmlTabIndex || 0;\n}\n\nfunction useDisableEvent(htmlEventRef, disabled) {\n  return useCallback(function (event) {\n    var _htmlEventRef$current;\n\n    (_htmlEventRef$current = htmlEventRef.current) === null || _htmlEventRef$current === void 0 ? void 0 : _htmlEventRef$current.call(htmlEventRef, event);\n    if (event.defaultPrevented) return;\n\n    if (disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }, [htmlEventRef, disabled]);\n}\n\nvar useTabbable = createHook({\n  name: \"Tabbable\",\n  compose: useRole,\n  keys: TABBABLE_KEYS,\n  useOptions: function useOptions(options, _ref) {\n    var disabled = _ref.disabled;\n    return _objectSpread2({\n      disabled: disabled\n    }, options);\n  },\n  useProps: function useProps(options, _ref2) {\n    var htmlRef = _ref2.ref,\n        htmlTabIndex = _ref2.tabIndex,\n        htmlOnClickCapture = _ref2.onClickCapture,\n        htmlOnMouseDownCapture = _ref2.onMouseDownCapture,\n        htmlOnMouseDown = _ref2.onMouseDown,\n        htmlOnKeyPressCapture = _ref2.onKeyPressCapture,\n        htmlStyle = _ref2.style,\n        htmlProps = _objectWithoutPropertiesLoose(_ref2, [\"ref\", \"tabIndex\", \"onClickCapture\", \"onMouseDownCapture\", \"onMouseDown\", \"onKeyPressCapture\", \"style\"]);\n\n    var ref = useRef(null);\n    var onClickCaptureRef = useLiveRef(htmlOnClickCapture);\n    var onMouseDownCaptureRef = useLiveRef(htmlOnMouseDownCapture);\n    var onMouseDownRef = useLiveRef(htmlOnMouseDown);\n    var onKeyPressCaptureRef = useLiveRef(htmlOnKeyPressCapture);\n    var trulyDisabled = !!options.disabled && !options.focusable;\n\n    var _React$useState2 = useState(true),\n        nativeTabbable = _React$useState2[0],\n        setNativeTabbable = _React$useState2[1];\n\n    var _React$useState3 = useState(true),\n        supportsDisabled = _React$useState3[0],\n        setSupportsDisabled = _React$useState3[1];\n\n    var style = options.disabled ? _objectSpread2({\n      pointerEvents: \"none\"\n    }, htmlStyle) : htmlStyle;\n    var focusOnMouseDown = useFocusOnMouseDown();\n    useIsomorphicEffect(function () {\n      var tabbable = ref.current;\n\n      if (!tabbable) {\n        process.env.NODE_ENV !== \"production\" ? warning(true, \"Can't determine if the element is a native tabbable element because `ref` wasn't passed to the component.\", \"See https://reakit.io/docs/tabbable\") : void 0;\n        return;\n      }\n\n      if (!isNativeTabbable(tabbable)) {\n        setNativeTabbable(false);\n      }\n\n      if (!supportsDisabledAttribute(tabbable)) {\n        setSupportsDisabled(false);\n      }\n    }, []);\n    var onClickCapture = useDisableEvent(onClickCaptureRef, options.disabled);\n    var onMouseDownCapture = useDisableEvent(onMouseDownCaptureRef, options.disabled);\n    var onKeyPressCapture = useDisableEvent(onKeyPressCaptureRef, options.disabled);\n    var onMouseDown = useCallback(function (event) {\n      var _onMouseDownRef$curre;\n\n      (_onMouseDownRef$curre = onMouseDownRef.current) === null || _onMouseDownRef$curre === void 0 ? void 0 : _onMouseDownRef$curre.call(onMouseDownRef, event);\n      if (event.defaultPrevented) return;\n      focusOnMouseDown === null || focusOnMouseDown === void 0 ? void 0 : focusOnMouseDown(event);\n    }, [options.disabled, focusOnMouseDown]);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      style: style,\n      tabIndex: getTabIndex(trulyDisabled, nativeTabbable, supportsDisabled, htmlTabIndex),\n      disabled: trulyDisabled && supportsDisabled ? true : undefined,\n      \"aria-disabled\": options.disabled ? true : undefined,\n      onClickCapture: onClickCapture,\n      onMouseDownCapture: onMouseDownCapture,\n      onMouseDown: onMouseDown,\n      onKeyPressCapture: onKeyPressCapture\n    }, htmlProps);\n  }\n});\nvar Tabbable = createComponent({\n  as: \"div\",\n  useHook: useTabbable\n});\nexport { Tabbable, useTabbable };","map":{"version":3,"sources":["/Users/firushanov/Desktop/Kadince/todowithfirus/frontend/node_modules/reakit/es/Tabbable/Tabbable.js"],"names":["a","_objectSpread2","_","_objectWithoutPropertiesLoose","createComponent","createHook","useRef","useState","useCallback","useEffect","useForkRef","isButton","warning","useLiveRef","useIsomorphicEffect","hasFocusWithin","isPortalEvent","getActiveElement","canUseDOM","getClosestFocusable","useRole","TABBABLE_KEYS","isUA","string","window","navigator","userAgent","indexOf","isSafariOrFirefoxOnMac","focusIfNeeded","element","focus","useFocusOnMouseDown","undefined","_React$useState","tabbable","scheduleFocus","onMouseDown","event","currentTarget","activeElement","activeElementIsBody","tagName","focusableAncestor","parentElement","onFocus","addEventListener","once","onBlur","isNativeTabbable","supportsDisabledAttribute","getTabIndex","trulyDisabled","nativeTabbable","supportsDisabled","htmlTabIndex","useDisableEvent","htmlEventRef","disabled","_htmlEventRef$current","current","call","defaultPrevented","stopPropagation","preventDefault","useTabbable","name","compose","keys","useOptions","options","_ref","useProps","_ref2","htmlRef","ref","tabIndex","htmlOnClickCapture","onClickCapture","htmlOnMouseDownCapture","onMouseDownCapture","htmlOnMouseDown","htmlOnKeyPressCapture","onKeyPressCapture","htmlStyle","style","htmlProps","onClickCaptureRef","onMouseDownCaptureRef","onMouseDownRef","onKeyPressCaptureRef","focusable","_React$useState2","setNativeTabbable","_React$useState3","setSupportsDisabled","pointerEvents","focusOnMouseDown","process","env","NODE_ENV","_onMouseDownRef$curre","Tabbable","as","useHook"],"mappings":"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","sourcesContent":["import { a as _objectSpread2, _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useRef, useState, useCallback, useEffect } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport { isButton } from 'reakit-utils/isButton';\nimport { warning } from 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport { useIsomorphicEffect } from 'reakit-utils/useIsomorphicEffect';\nimport { hasFocusWithin } from 'reakit-utils/hasFocusWithin';\nimport { isPortalEvent } from 'reakit-utils/isPortalEvent';\nimport { getActiveElement } from 'reakit-utils/getActiveElement';\nimport { canUseDOM } from 'reakit-utils/canUseDOM';\nimport { getClosestFocusable } from 'reakit-utils/tabbable';\nimport { useRole } from '../Role/Role.js';\n\n// Automatically generated\nvar TABBABLE_KEYS = [\"disabled\", \"focusable\"];\n\nfunction isUA(string) {\n  if (!canUseDOM) return false;\n  return window.navigator.userAgent.indexOf(string) !== -1;\n}\n\nvar isSafariOrFirefoxOnMac = isUA(\"Mac\") && !isUA(\"Chrome\") && (isUA(\"Safari\") || isUA(\"Firefox\"));\n\nfunction focusIfNeeded(element) {\n  if (!hasFocusWithin(element)) {\n    element.focus();\n  }\n} // Safari and Firefox on MacOS don't focus on buttons on mouse down like other\n// browsers/platforms. Instead, they focus on the closest focusable ancestor\n// element, which is ultimately the body element. So we make sure to give focus\n// to the tabbable element on mouse down so it works consistently across\n// browsers.\n// istanbul ignore next\n\n\nfunction useFocusOnMouseDown() {\n  if (!isSafariOrFirefoxOnMac) return undefined;\n\n  var _React$useState = useState(null),\n      tabbable = _React$useState[0],\n      scheduleFocus = _React$useState[1];\n\n  useEffect(function () {\n    if (!tabbable) return;\n    focusIfNeeded(tabbable);\n    scheduleFocus(null);\n  }, [tabbable]);\n  var onMouseDown = useCallback(function (event) {\n    var element = event.currentTarget;\n    if (isPortalEvent(event)) return;\n    if (!isButton(element)) return;\n    var activeElement = getActiveElement(element);\n    if (!activeElement) return;\n    var activeElementIsBody = activeElement.tagName === \"BODY\";\n    var focusableAncestor = getClosestFocusable(element.parentElement);\n\n    if (activeElement === focusableAncestor || activeElementIsBody && !focusableAncestor) {\n      // When the active element is the focusable ancestor, it'll not emit\n      // focus/blur events. After all, it's already focused. So we can't\n      // listen to those events to focus this tabbable element.\n      // When the active element is body and there's no focusable ancestor,\n      // we also don't have any other event to listen to since body never\n      // emits focus/blur events on itself.\n      // In both of these cases, we have to schedule focus on this tabbable\n      // element.\n      scheduleFocus(element);\n    } else if (focusableAncestor) {\n      // Clicking (mouse down) on the tabbable element on Safari and Firefox\n      // on MacOS will fire focus on the focusable ancestor element if\n      // there's any and if it's not the current active element. So we wait\n      // for this event to happen before moving focus to this element.\n      // Instead of moving focus right away, we have to schedule it,\n      // otherwise it's gonna prevent drag events from happening.\n      var onFocus = function onFocus() {\n        return scheduleFocus(element);\n      };\n\n      focusableAncestor.addEventListener(\"focusin\", onFocus, {\n        once: true\n      });\n    } else {\n      // Finally, if there's no focsuable ancestor and there's another\n      // element with focus, we wait for that element to get blurred before\n      // focusing this one.\n      var onBlur = function onBlur() {\n        return focusIfNeeded(element);\n      };\n\n      activeElement.addEventListener(\"blur\", onBlur, {\n        once: true\n      });\n    }\n  }, []);\n  return onMouseDown;\n}\n\nfunction isNativeTabbable(element) {\n  return element.tagName === \"BUTTON\" || element.tagName === \"INPUT\" || element.tagName === \"SELECT\" || element.tagName === \"TEXTAREA\" || element.tagName === \"A\";\n}\n\nfunction supportsDisabledAttribute(element) {\n  return element.tagName === \"BUTTON\" || element.tagName === \"INPUT\" || element.tagName === \"SELECT\" || element.tagName === \"TEXTAREA\";\n}\n\nfunction getTabIndex(trulyDisabled, nativeTabbable, supportsDisabled, htmlTabIndex) {\n  if (trulyDisabled) {\n    if (nativeTabbable && !supportsDisabled) {\n      // Anchor, audio and video tags don't support the `disabled` attribute.\n      // We must pass tabIndex={-1} so they don't receive focus on tab.\n      return -1;\n    } // Elements that support the `disabled` attribute don't need tabIndex.\n\n\n    return undefined;\n  }\n\n  if (nativeTabbable) {\n    // If the element is enabled and it's natively tabbable, we don't need to\n    // specify a tabIndex attribute unless it's explicitly set by the user.\n    return htmlTabIndex;\n  } // If the element is enabled and is not natively tabbable, we have to\n  // fallback tabIndex={0}.\n\n\n  return htmlTabIndex || 0;\n}\n\nfunction useDisableEvent(htmlEventRef, disabled) {\n  return useCallback(function (event) {\n    var _htmlEventRef$current;\n\n    (_htmlEventRef$current = htmlEventRef.current) === null || _htmlEventRef$current === void 0 ? void 0 : _htmlEventRef$current.call(htmlEventRef, event);\n    if (event.defaultPrevented) return;\n\n    if (disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }, [htmlEventRef, disabled]);\n}\n\nvar useTabbable = createHook({\n  name: \"Tabbable\",\n  compose: useRole,\n  keys: TABBABLE_KEYS,\n  useOptions: function useOptions(options, _ref) {\n    var disabled = _ref.disabled;\n    return _objectSpread2({\n      disabled: disabled\n    }, options);\n  },\n  useProps: function useProps(options, _ref2) {\n    var htmlRef = _ref2.ref,\n        htmlTabIndex = _ref2.tabIndex,\n        htmlOnClickCapture = _ref2.onClickCapture,\n        htmlOnMouseDownCapture = _ref2.onMouseDownCapture,\n        htmlOnMouseDown = _ref2.onMouseDown,\n        htmlOnKeyPressCapture = _ref2.onKeyPressCapture,\n        htmlStyle = _ref2.style,\n        htmlProps = _objectWithoutPropertiesLoose(_ref2, [\"ref\", \"tabIndex\", \"onClickCapture\", \"onMouseDownCapture\", \"onMouseDown\", \"onKeyPressCapture\", \"style\"]);\n\n    var ref = useRef(null);\n    var onClickCaptureRef = useLiveRef(htmlOnClickCapture);\n    var onMouseDownCaptureRef = useLiveRef(htmlOnMouseDownCapture);\n    var onMouseDownRef = useLiveRef(htmlOnMouseDown);\n    var onKeyPressCaptureRef = useLiveRef(htmlOnKeyPressCapture);\n    var trulyDisabled = !!options.disabled && !options.focusable;\n\n    var _React$useState2 = useState(true),\n        nativeTabbable = _React$useState2[0],\n        setNativeTabbable = _React$useState2[1];\n\n    var _React$useState3 = useState(true),\n        supportsDisabled = _React$useState3[0],\n        setSupportsDisabled = _React$useState3[1];\n\n    var style = options.disabled ? _objectSpread2({\n      pointerEvents: \"none\"\n    }, htmlStyle) : htmlStyle;\n    var focusOnMouseDown = useFocusOnMouseDown();\n    useIsomorphicEffect(function () {\n      var tabbable = ref.current;\n\n      if (!tabbable) {\n        process.env.NODE_ENV !== \"production\" ? warning(true, \"Can't determine if the element is a native tabbable element because `ref` wasn't passed to the component.\", \"See https://reakit.io/docs/tabbable\") : void 0;\n        return;\n      }\n\n      if (!isNativeTabbable(tabbable)) {\n        setNativeTabbable(false);\n      }\n\n      if (!supportsDisabledAttribute(tabbable)) {\n        setSupportsDisabled(false);\n      }\n    }, []);\n    var onClickCapture = useDisableEvent(onClickCaptureRef, options.disabled);\n    var onMouseDownCapture = useDisableEvent(onMouseDownCaptureRef, options.disabled);\n    var onKeyPressCapture = useDisableEvent(onKeyPressCaptureRef, options.disabled);\n    var onMouseDown = useCallback(function (event) {\n      var _onMouseDownRef$curre;\n\n      (_onMouseDownRef$curre = onMouseDownRef.current) === null || _onMouseDownRef$curre === void 0 ? void 0 : _onMouseDownRef$curre.call(onMouseDownRef, event);\n      if (event.defaultPrevented) return;\n      focusOnMouseDown === null || focusOnMouseDown === void 0 ? void 0 : focusOnMouseDown(event);\n    }, [options.disabled, focusOnMouseDown]);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      style: style,\n      tabIndex: getTabIndex(trulyDisabled, nativeTabbable, supportsDisabled, htmlTabIndex),\n      disabled: trulyDisabled && supportsDisabled ? true : undefined,\n      \"aria-disabled\": options.disabled ? true : undefined,\n      onClickCapture: onClickCapture,\n      onMouseDownCapture: onMouseDownCapture,\n      onMouseDown: onMouseDown,\n      onKeyPressCapture: onKeyPressCapture\n    }, htmlProps);\n  }\n});\nvar Tabbable = createComponent({\n  as: \"div\",\n  useHook: useTabbable\n});\n\nexport { Tabbable, useTabbable };\n"]},"metadata":{},"sourceType":"module"}