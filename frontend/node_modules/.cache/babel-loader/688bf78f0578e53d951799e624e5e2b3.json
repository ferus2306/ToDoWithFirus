{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/firushanov/Desktop/Kadince/todowithfirus/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm.js';\nimport Todo from './Todo.js';\nimport { Container, Col, Row, Form } from 'react-bootstrap';\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([// { task: \"Read Peace and War by Leo Tolstoy\" },\n    // { task: \"Participate in CodeCamp\" },\n    // { task: \"Prepare dinner\" }\n  ]);\n\n  const updateTodo = (todoId, newValue) => {\n    console.log('update to do function');\n\n    if (!newValue.task || /^\\s*$/.test(newValue.task)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  }; // function addTodo(todo) {\n  //     setTodos([todo, ...todos]);\n  // }\n\n\n  const addTodo = todo => {\n    console.log('Add todo');\n\n    if (!todo.task || /^\\s*$/.test(todo.task)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const deleteTodo = todoIndex => {\n    const newTodos = todos.filter((_, index) => index !== todoIndex);\n    setTodos(newTodos);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"app d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"todo-list\",\n        children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n          className: \"\",\n          onSubmit: addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), todos.length < 1 && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: \"You have no items in To Do List.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Todo, {\n          todos: todos,\n          deleteTodo: deleteTodo,\n          completeTodo: completeTodo,\n          updateTodo: updateTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"BXML3YdP06M9sOkbOn+aFqa5qsY=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/firushanov/Desktop/Kadince/todowithfirus/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","Container","Col","Row","Form","TodoList","todos","setTodos","updateTodo","todoId","newValue","console","log","task","test","prev","map","item","id","addTodo","todo","newTodos","deleteTodo","todoIndex","filter","_","index","completeTodo","updatedTodos","isComplete","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport TodoForm from './TodoForm.js'\nimport Todo from './Todo.js'\nimport { Container, Col, Row, Form } from 'react-bootstrap'\n\n\nfunction TodoList() {\n\n    const [todos, setTodos] = useState([\n        // { task: \"Read Peace and War by Leo Tolstoy\" },\n        // { task: \"Participate in CodeCamp\" },\n        // { task: \"Prepare dinner\" }\n    ]);\n\n\n    const updateTodo = (todoId, newValue) => {\n        console.log('update to do function')\n        if (!newValue.task || /^\\s*$/.test(newValue.task)) {\n            return;\n        }\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item))\n        );\n    }\n\n\n    // function addTodo(todo) {\n    //     setTodos([todo, ...todos]);\n    // }\n\n\n    const addTodo = todo => {\n        console.log('Add todo')\n        if (!todo.task || /^\\s*$/.test(todo.task)) {\n            return;\n        }\n        const newTodos = [todo, ...todos];\n        setTodos(newTodos);\n        console.log(...todos);\n    }\n\n    const deleteTodo = (todoIndex) => {\n        const newTodos = todos.filter((_, index) => index !== todoIndex);\n        setTodos(newTodos);\n    }\n\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n\n\n\n    return (\n        <Container>\n          <Row className=\"app d-flex justify-content-center\">\n                <Col className=\"todo-list\">\n                    <TodoForm className=\"\" onSubmit={addTodo} />\n\n                    <Form.Check type=\"checkbox\" label=\"\"/>\n                    <Form.Check />\n                    \n\n                    {todos.length < 1 &&\n                        <h3 className=\"text-center\">You have no items in To Do List.</h3>\n                    }\n\n                    <Todo todos={todos} deleteTodo={deleteTodo} completeTodo={completeTodo} updateTodo={updateTodo} />\n                </Col>\n          </Row>\n        </Container>\n    )\n}\n\nexport default TodoList;\n\n"]},"metadata":{},"sourceType":"module"}