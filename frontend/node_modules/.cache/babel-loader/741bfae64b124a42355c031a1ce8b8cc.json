{"ast":null,"code":"import './getDocument.js';\nimport './getWindow.js';\nimport { canUseDOM } from './canUseDOM.js';\nimport { getActiveElement } from './getActiveElement.js';\nvar isIE11 = canUseDOM && \"msCrypto\" in window;\n/**\n * Cross-browser method that returns the next active element (the element that\n * is receiving focus) after a blur event is dispatched. It receives the blur\n * event object as the argument.\n *\n * @example\n * import { getNextActiveElementOnBlur } from \"reakit-utils\";\n *\n * const element = document.getElementById(\"id\");\n * element.addEventListener(\"blur\", (event) => {\n *   const nextActiveElement = getNextActiveElementOnBlur(event);\n * });\n */\n\nfunction getNextActiveElementOnBlur(event) {\n  // IE 11 doesn't support event.relatedTarget on blur.\n  // document.activeElement points the the next active element.\n  // On modern browsers, document.activeElement points to the current target.\n  if (isIE11) {\n    var activeElement = getActiveElement(event.currentTarget);\n    return activeElement;\n  }\n\n  return event.relatedTarget;\n}\n\nexport { getNextActiveElementOnBlur };","map":{"version":3,"sources":["/Users/firushanov/Desktop/Kadince/todowithfirus/frontend/node_modules/reakit-utils/es/getNextActiveElementOnBlur.js"],"names":["canUseDOM","getActiveElement","isIE11","window","getNextActiveElementOnBlur","event","activeElement","currentTarget","relatedTarget"],"mappings":"AAAA,OAAO,kBAAP;AACA,OAAO,gBAAP;AACA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AAEA,IAAIC,MAAM,GAAGF,SAAS,IAAI,cAAcG,MAAxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,0BAAT,CAAoCC,KAApC,EAA2C;AACzC;AACA;AACA;AACA,MAAIH,MAAJ,EAAY;AACV,QAAII,aAAa,GAAGL,gBAAgB,CAACI,KAAK,CAACE,aAAP,CAApC;AACA,WAAOD,aAAP;AACD;;AAED,SAAOD,KAAK,CAACG,aAAb;AACD;;AAED,SAASJ,0BAAT","sourcesContent":["import './getDocument.js';\nimport './getWindow.js';\nimport { canUseDOM } from './canUseDOM.js';\nimport { getActiveElement } from './getActiveElement.js';\n\nvar isIE11 = canUseDOM && \"msCrypto\" in window;\n/**\n * Cross-browser method that returns the next active element (the element that\n * is receiving focus) after a blur event is dispatched. It receives the blur\n * event object as the argument.\n *\n * @example\n * import { getNextActiveElementOnBlur } from \"reakit-utils\";\n *\n * const element = document.getElementById(\"id\");\n * element.addEventListener(\"blur\", (event) => {\n *   const nextActiveElement = getNextActiveElementOnBlur(event);\n * });\n */\n\nfunction getNextActiveElementOnBlur(event) {\n  // IE 11 doesn't support event.relatedTarget on blur.\n  // document.activeElement points the the next active element.\n  // On modern browsers, document.activeElement points to the current target.\n  if (isIE11) {\n    var activeElement = getActiveElement(event.currentTarget);\n    return activeElement;\n  }\n\n  return event.relatedTarget;\n}\n\nexport { getNextActiveElementOnBlur };\n"]},"metadata":{},"sourceType":"module"}