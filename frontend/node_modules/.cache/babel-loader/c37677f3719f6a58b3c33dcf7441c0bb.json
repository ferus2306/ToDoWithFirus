{"ast":null,"code":"import './getDocument.js';\nimport './getActiveElement.js';\nimport { hasFocus } from './hasFocus.js';\n/**\n * Ensures `element` will receive focus if it's not already.\n *\n * @example\n * import { ensureFocus } from \"reakit-utils\";\n *\n * ensureFocus(document.activeElement); // does nothing\n *\n * const element = document.querySelector(\"input\");\n *\n * ensureFocus(element); // focuses element\n * ensureFocus(element, { preventScroll: true }); // focuses element preventing scroll jump\n *\n * function isActive(el) {\n *   return el.dataset.active === \"true\";\n * }\n *\n * ensureFocus(document.querySelector(\"[data-active='true']\"), { isActive }); // does nothing\n *\n * @returns {number} `requestAnimationFrame` call ID so it can be passed to `cancelAnimationFrame` if needed.\n */\n\nfunction ensureFocus(element, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      preventScroll = _ref.preventScroll,\n      _ref$isActive = _ref.isActive,\n      isActive = _ref$isActive === void 0 ? hasFocus : _ref$isActive;\n\n  if (isActive(element)) return -1;\n  element.focus({\n    preventScroll: preventScroll\n  });\n  if (isActive(element)) return -1;\n  return requestAnimationFrame(function () {\n    element.focus({\n      preventScroll: preventScroll\n    });\n  });\n}\n\nexport { ensureFocus };","map":{"version":3,"sources":["/Users/firushanov/Desktop/Kadince/todowithfirus/frontend/node_modules/reakit-utils/es/ensureFocus.js"],"names":["hasFocus","ensureFocus","element","_temp","_ref","preventScroll","_ref$isActive","isActive","focus","requestAnimationFrame"],"mappings":"AAAA,OAAO,kBAAP;AACA,OAAO,uBAAP;AACA,SAASA,QAAT,QAAyB,eAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,KAA9B,EAAqC;AACnC,MAAIC,IAAI,GAAGD,KAAK,KAAK,KAAK,CAAf,GAAmB,EAAnB,GAAwBA,KAAnC;AAAA,MACIE,aAAa,GAAGD,IAAI,CAACC,aADzB;AAAA,MAEIC,aAAa,GAAGF,IAAI,CAACG,QAFzB;AAAA,MAGIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2BN,QAA3B,GAAsCM,aAHrD;;AAKA,MAAIC,QAAQ,CAACL,OAAD,CAAZ,EAAuB,OAAO,CAAC,CAAR;AACvBA,EAAAA,OAAO,CAACM,KAAR,CAAc;AACZH,IAAAA,aAAa,EAAEA;AADH,GAAd;AAGA,MAAIE,QAAQ,CAACL,OAAD,CAAZ,EAAuB,OAAO,CAAC,CAAR;AACvB,SAAOO,qBAAqB,CAAC,YAAY;AACvCP,IAAAA,OAAO,CAACM,KAAR,CAAc;AACZH,MAAAA,aAAa,EAAEA;AADH,KAAd;AAGD,GAJ2B,CAA5B;AAKD;;AAED,SAASJ,WAAT","sourcesContent":["import './getDocument.js';\nimport './getActiveElement.js';\nimport { hasFocus } from './hasFocus.js';\n\n/**\n * Ensures `element` will receive focus if it's not already.\n *\n * @example\n * import { ensureFocus } from \"reakit-utils\";\n *\n * ensureFocus(document.activeElement); // does nothing\n *\n * const element = document.querySelector(\"input\");\n *\n * ensureFocus(element); // focuses element\n * ensureFocus(element, { preventScroll: true }); // focuses element preventing scroll jump\n *\n * function isActive(el) {\n *   return el.dataset.active === \"true\";\n * }\n *\n * ensureFocus(document.querySelector(\"[data-active='true']\"), { isActive }); // does nothing\n *\n * @returns {number} `requestAnimationFrame` call ID so it can be passed to `cancelAnimationFrame` if needed.\n */\nfunction ensureFocus(element, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      preventScroll = _ref.preventScroll,\n      _ref$isActive = _ref.isActive,\n      isActive = _ref$isActive === void 0 ? hasFocus : _ref$isActive;\n\n  if (isActive(element)) return -1;\n  element.focus({\n    preventScroll: preventScroll\n  });\n  if (isActive(element)) return -1;\n  return requestAnimationFrame(function () {\n    element.focus({\n      preventScroll: preventScroll\n    });\n  });\n}\n\nexport { ensureFocus };\n"]},"metadata":{},"sourceType":"module"}