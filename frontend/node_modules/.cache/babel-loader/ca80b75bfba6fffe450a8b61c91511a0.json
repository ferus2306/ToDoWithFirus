{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/firushanov/Desktop/Kadince/todowithfirus/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm.js';\nimport Todo from './Todo.js';\nimport { Container, Col, Row } from 'react-bootstrap';\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    task: \"Read Peace and War by Leo Tolstoy\"\n  }, {\n    task: \"Participate in CodeCamp\"\n  }, {\n    task: \"Prepare dinner\"\n  }]);\n\n  const updateTodo = (todoId, newValue) => {\n    console.log('update to do function');\n\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  function addTodo(todo) {\n    setTodos([todo, ...todos]);\n  }\n\n  const deleteTodo = todoIndex => {\n    const newTodos = todos.filter((_, index) => index !== todoIndex);\n    setTodos(newTodos);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"app d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"todo-list\",\n        children: [/*#__PURE__*/_jsxDEV(Todo, {\n          todos: todos,\n          deleteTodo: deleteTodo,\n          completeTodo: completeTodo,\n          updateTodo: updateTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n          onSubmit: addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), todos.length < 1 && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: \"You have no items in To Do List.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"t3ZoBwXC2l4Yls8gvytc8DyiSRU=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/firushanov/Desktop/Kadince/todowithfirus/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","Container","Col","Row","TodoList","todos","setTodos","task","updateTodo","todoId","newValue","console","log","text","test","prev","map","item","id","addTodo","todo","deleteTodo","todoIndex","newTodos","filter","_","index","completeTodo","updatedTodos","isComplete","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAC/B;AAAES,IAAAA,IAAI,EAAE;AAAR,GAD+B,EAE/B;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAF+B,EAG/B;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAH+B,CAAD,CAAlC;;AAOA,QAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,QAAI,CAACF,QAAQ,CAACG,IAAV,IAAkB,QAAQC,IAAR,CAAaJ,QAAQ,CAACG,IAAtB,CAAtB,EAAmD;AAC/C;AACH;;AACDP,IAAAA,QAAQ,CAACS,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYT,MAAZ,GAAqBC,QAArB,GAAgCO,IAAlD,CAAT,CAAR;AAEH,GAPD;;AAUA,WAASE,OAAT,CAAiBC,IAAjB,EAAuB;AACnBd,IAAAA,QAAQ,CAAC,CAACc,IAAD,EAAO,GAAGf,KAAV,CAAD,CAAR;AACH;;AAED,QAAMgB,UAAU,GAAIC,SAAD,IAAe;AAC9B,UAAMC,QAAQ,GAAGlB,KAAK,CAACmB,MAAN,CAAa,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,KAAKJ,SAArC,CAAjB;AACAhB,IAAAA,QAAQ,CAACiB,QAAD,CAAR;AACH,GAHD;;AAMA,QAAMI,YAAY,GAAGT,EAAE,IAAI;AACvB,QAAIU,YAAY,GAAGvB,KAAK,CAACW,GAAN,CAAUI,IAAI,IAAI;AACjC,UAAIA,IAAI,CAACF,EAAL,KAAYA,EAAhB,EAAoB;AAChBE,QAAAA,IAAI,CAACS,UAAL,GAAkB,CAACT,IAAI,CAACS,UAAxB;AACH;;AACD,aAAOT,IAAP;AACH,KALkB,CAAnB;AAMAd,IAAAA,QAAQ,CAACsB,YAAD,CAAR;AACH,GARD;;AAaA,sBACI,QAAC,SAAD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,6BACM,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEvB,KAAb;AAAoB,UAAA,UAAU,EAAEgB,UAAhC;AAA4C,UAAA,YAAY,EAAEM,YAA1D;AAAwE,UAAA,UAAU,EAAEnB;AAApF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAEW;AAApB;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAKKd,KAAK,CAACyB,MAAN,GAAe,CAAf,iBACG;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANR;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAzDQ1B,Q;;KAAAA,Q;AA2DT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport TodoForm from './TodoForm.js'\nimport Todo from './Todo.js'\nimport { Container, Col, Row } from 'react-bootstrap'\n\n\nfunction TodoList() {\n\n    const [todos, setTodos] = useState([\n        { task: \"Read Peace and War by Leo Tolstoy\" },\n        { task: \"Participate in CodeCamp\" },\n        { task: \"Prepare dinner\" }\n    ]);\n\n\n    const updateTodo = (todoId, newValue) => {\n        console.log('update to do function')\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item))\n        );\n    }\n\n\n    function addTodo(todo) {\n        setTodos([todo, ...todos]);\n    }\n\n    const deleteTodo = (todoIndex) => {\n        const newTodos = todos.filter((_, index) => index !== todoIndex);\n        setTodos(newTodos);\n    }\n\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n\n\n\n    return (\n        <Container>\n          <Row className=\"app d-flex justify-content-center\">\n                <Col className=\"todo-list\">\n                    \n                    <Todo todos={todos} deleteTodo={deleteTodo} completeTodo={completeTodo} updateTodo={updateTodo}/>\n                    <TodoForm onSubmit={addTodo} />\n                    \n                    {todos.length < 1 &&\n                        <h3 className=\"text-center\">You have no items in To Do List.</h3>\n                    }\n                </Col>\n          </Row>\n        </Container>\n    )\n}\n\nexport default TodoList;\n\n"]},"metadata":{},"sourceType":"module"}