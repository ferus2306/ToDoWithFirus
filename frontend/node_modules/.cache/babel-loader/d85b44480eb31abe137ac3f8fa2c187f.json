{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/firushanov/Desktop/Kadince/todowithfirus/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Form, Button } from 'react-bootstrap'; // import { v4 as uuidv4 } from 'uuid';\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState('');\n  const inputRef = useRef(null);\n  useEffect();\n\n  function handleTaskInputChange(e) {\n    setInput(e.target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      // id: uuidv4(),\n      id: Math.floor(Math.random() * 10000),\n      task: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"my-3\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"Add a todo\",\n        name: \"text\",\n        type: \"text\",\n        value: input,\n        onChange: handleTaskInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      size: \"sm\",\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"4bB8PA6vI65WiV8dMZT00Ka0B5A=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/firushanov/Desktop/Kadince/todowithfirus/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","Form","Button","TodoForm","props","input","setInput","inputRef","handleTaskInputChange","e","target","value","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","task"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,IAAT,EAAeC,MAAf,QAA8B,iBAA9B,C,CACA;;AAGA,SAASC,QAAT,CAAmBC,KAAnB,EAA2B;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMS,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAGAD,EAAAA,SAAS;;AAIT,WAASS,qBAAT,CAA+BC,CAA/B,EAAkC;AAC9BH,IAAAA,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH;;AAED,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACI,cAAF;AACAT,IAAAA,KAAK,CAACU,QAAN,CAAe;AACX;AACAC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CAFO;AAGXC,MAAAA,IAAI,EAAEd;AAHK,KAAf;AAMAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GATD;;AAWA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEM,YAAjC;AAAA,4BACA,QAAC,IAAD,CAAM,KAAN;AAAA,6BACI,QAAC,IAAD,CAAM,OAAN;AACA,QAAA,WAAW,EAAC,YADZ;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,IAAI,EAAC,MAHL;AAIA,QAAA,KAAK,EAAEP,KAJP;AAKA,QAAA,QAAQ,EAAEG;AALV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAWI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,IAA/B;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA1CQL,Q;;KAAAA,Q;AA6CT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Form, Button, } from 'react-bootstrap'\n// import { v4 as uuidv4 } from 'uuid';\n\n\nfunction TodoForm( props ) {\n    const [input, setInput] = useState('');\n\n    const inputRef = useRef(null)\n\n\n    useEffect()\n\n\n        \n    function handleTaskInputChange(e) {\n        setInput(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.onSubmit({\n            // id: uuidv4(),\n            id: Math.floor(Math.random() * 10000),\n            task: input\n        });\n\n        setInput('')\n    }\n\n    return (\n        <Form className=\"my-3\" onSubmit={handleSubmit}>\n        <Form.Group>\n            <Form.Control\n            placeholder=\"Add a todo\"\n            name=\"text\"\n            type=\"text\"\n            value={input}\n            onChange={handleTaskInputChange}\n            />\n            </Form.Group>\n        \n            <Button variant=\"primary\" size=\"sm\" type=\"submit\">\n                Add\n            </Button>\n        </Form>\n  );\n}\n\n\nexport default TodoForm\n\n"]},"metadata":{},"sourceType":"module"}