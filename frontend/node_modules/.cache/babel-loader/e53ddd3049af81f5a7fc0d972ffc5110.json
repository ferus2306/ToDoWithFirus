{"ast":null,"code":"import { getDocument } from './getDocument.js';\nimport { getWindow } from './getWindow.js';\n\nfunction createKeyboardEvent(element, type, eventInit) {\n  if (eventInit === void 0) {\n    eventInit = {};\n  }\n\n  if (typeof KeyboardEvent === \"function\") {\n    return new KeyboardEvent(type, eventInit);\n  } // IE 11 doesn't support Event constructors\n\n\n  var event = getDocument(element).createEvent(\"KeyboardEvent\");\n  event.initKeyboardEvent(type, eventInit.bubbles, eventInit.cancelable, getWindow(element), eventInit.key, eventInit.location, eventInit.ctrlKey, eventInit.altKey, eventInit.shiftKey, eventInit.metaKey);\n  return event;\n}\n/**\n * Creates and dispatches `KeyboardEvent` in a way that also works on IE 11.\n *\n * @example\n * import { fireKeyboardEvent } from \"reakit-utils\";\n *\n * fireKeyboardEvent(document.getElementById(\"id\"), \"keydown\", {\n *   key: \"ArrowDown\",\n *   shiftKey: true,\n * });\n */\n\n\nfunction fireKeyboardEvent(element, type, eventInit) {\n  return element.dispatchEvent(createKeyboardEvent(element, type, eventInit));\n}\n\nexport { fireKeyboardEvent };","map":{"version":3,"sources":["/Users/firushanov/Desktop/Kadince/todowithfirus/frontend/node_modules/reakit-utils/es/fireKeyboardEvent.js"],"names":["getDocument","getWindow","createKeyboardEvent","element","type","eventInit","KeyboardEvent","event","createEvent","initKeyboardEvent","bubbles","cancelable","key","location","ctrlKey","altKey","shiftKey","metaKey","fireKeyboardEvent","dispatchEvent"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,IAAtC,EAA4CC,SAA5C,EAAuD;AACrD,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AACxBA,IAAAA,SAAS,GAAG,EAAZ;AACD;;AAED,MAAI,OAAOC,aAAP,KAAyB,UAA7B,EAAyC;AACvC,WAAO,IAAIA,aAAJ,CAAkBF,IAAlB,EAAwBC,SAAxB,CAAP;AACD,GAPoD,CAOnD;;;AAGF,MAAIE,KAAK,GAAGP,WAAW,CAACG,OAAD,CAAX,CAAqBK,WAArB,CAAiC,eAAjC,CAAZ;AACAD,EAAAA,KAAK,CAACE,iBAAN,CAAwBL,IAAxB,EAA8BC,SAAS,CAACK,OAAxC,EAAiDL,SAAS,CAACM,UAA3D,EAAuEV,SAAS,CAACE,OAAD,CAAhF,EAA2FE,SAAS,CAACO,GAArG,EAA0GP,SAAS,CAACQ,QAApH,EAA8HR,SAAS,CAACS,OAAxI,EAAiJT,SAAS,CAACU,MAA3J,EAAmKV,SAAS,CAACW,QAA7K,EAAuLX,SAAS,CAACY,OAAjM;AACA,SAAOV,KAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASW,iBAAT,CAA2Bf,OAA3B,EAAoCC,IAApC,EAA0CC,SAA1C,EAAqD;AACnD,SAAOF,OAAO,CAACgB,aAAR,CAAsBjB,mBAAmB,CAACC,OAAD,EAAUC,IAAV,EAAgBC,SAAhB,CAAzC,CAAP;AACD;;AAED,SAASa,iBAAT","sourcesContent":["import { getDocument } from './getDocument.js';\nimport { getWindow } from './getWindow.js';\n\nfunction createKeyboardEvent(element, type, eventInit) {\n  if (eventInit === void 0) {\n    eventInit = {};\n  }\n\n  if (typeof KeyboardEvent === \"function\") {\n    return new KeyboardEvent(type, eventInit);\n  } // IE 11 doesn't support Event constructors\n\n\n  var event = getDocument(element).createEvent(\"KeyboardEvent\");\n  event.initKeyboardEvent(type, eventInit.bubbles, eventInit.cancelable, getWindow(element), eventInit.key, eventInit.location, eventInit.ctrlKey, eventInit.altKey, eventInit.shiftKey, eventInit.metaKey);\n  return event;\n}\n/**\n * Creates and dispatches `KeyboardEvent` in a way that also works on IE 11.\n *\n * @example\n * import { fireKeyboardEvent } from \"reakit-utils\";\n *\n * fireKeyboardEvent(document.getElementById(\"id\"), \"keydown\", {\n *   key: \"ArrowDown\",\n *   shiftKey: true,\n * });\n */\n\n\nfunction fireKeyboardEvent(element, type, eventInit) {\n  return element.dispatchEvent(createKeyboardEvent(element, type, eventInit));\n}\n\nexport { fireKeyboardEvent };\n"]},"metadata":{},"sourceType":"module"}